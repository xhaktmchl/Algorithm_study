#include <iostream>
#include <algorithm>
using namespace std;
/*
[알고리즘잡스 ch20 SKM 03 V] 알파윷 - C
풀이: 구현,완탐
  //1.배열 저장
  //2.중간에 연결된 지점들은 조건을 달아준다
  // 5번칸 22 23 24 25 26
  // 22번칸 23 24 25 26 15
  // 23번칸 24 25 26 15 16
  // 24번칸 30 31 20 21 21
  // 25번칸 26 15 16 17 18
  // 26번칸 15 16 17 18 19
  
  // 10번칸 27 28 24 29 30
  // 27번칸 28 24 29 30 20
  // 28번칸 29 30 20 21 21
  // 29번칸 30 20 21 21 21
  // 30번칸 20 21 21 21 21
  // 3.현재 칸의 수 출력
시간복잡도: O()=
런타임 에러 원인 유형
1.입력 잘못
2.선언하지 않은 배열 참조
3.무한루프
*/
#define MAX 100
int n;
int a[MAX]={0,5,10,15,20,50,30,35,40,45,100,55,60,65,70,75,80,85,90,95,500,1000, 275, 250, 300 , 150, 175, 150, 125, 350, 400};
int dist[MAX];
int a5[MAX]={22,23, 24, 25, 26};
int a22[MAX]={23, 24, 25, 26, 15};
int a23[MAX]={24, 25, 26, 15, 16};
int a24[MAX]={30, 31, 20, 21, 21};
int a25[MAX]={26, 15, 16, 17, 18};
int a26[MAX]={15, 16, 17, 18, 19};

int a10[MAX]={27, 28, 24, 29, 30};
int a27[MAX]={28, 24, 29, 30, 20};
int a28[MAX]={29, 30, 20, 21, 21};
int a29[MAX]={ 30, 20, 21, 21, 21};
int a30[MAX]={20, 21, 21, 21, 21};

int main() {
  ios::sync_with_stdio(false); // 계산시간 단축 // cin,scanf 같이 쓰면 오류
	cin.tie(nullptr); cout.tie(nullptr);// 입출력 시간 단축 // 이것을 쓰면 scanf,printf섞어 쓰면 안됨

  //1.배열 저장
  cin>>n;
  for(int i=0;i<n;i++){
    cin>>dist[i];
  }
  //2.중간에 연결된 지점들은 조건을 달아준다
  // 5번칸 22 23 24 25 26
  // 22번칸 23 24 25 26 15
  // 23번칸 24 25 26 15 16
  // 24번칸 30 31 20 21 21
  // 25번칸 26 15 16 17 18
  // 26번칸 15 16 17 18 19
  
  // 10번칸 27 28 24 29 30
  // 27번칸 28 24 29 30 20
  // 28번칸 29 30 20 21 21
  // 29번칸 30 20 21 21 21
  // 30번칸 20 21 21 21 21
  // 3.현재 칸의 점수 출력
  int idx=0;
  for(int i=0;i<n;i++){
    if(idx == 5){idx= a5[dist[i]-1];}
    else if(idx==22){idx= a22[dist[i]-1];}
    else if(idx==23){idx=a23[dist[i]-1];}
    else if(idx==24){idx=a24[dist[i]-1];}
    else if(idx==25){idx=a25[dist[i]-1];}
    else if(idx==26){idx=a26[dist[i]-1];}
    else if(idx==10){idx=a10[dist[i]-1];}
    else if(idx==27){idx=a27[dist[i]-1];}
    else if(idx==28){idx=a28[dist[i]-1];}
    else if(idx==29){idx=a29[dist[i]-1];}
    else if(idx==30){idx=a30[dist[i]-1];}
    else {
      idx+=dist[i];
      if(idx >= 21){ idx=21;} // 주의: 이동한 범위가 21보다 크면
    } // 말 이동
    
    cout<<a[idx]<<" ";
    if(idx==21) break; // 주의:끝에 도착 21 일때만
  }cout<<'\n';
  return 0;
}
